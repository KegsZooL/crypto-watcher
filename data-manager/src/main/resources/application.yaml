spring:
  config:
    import: optional:file:.env[.properties]

  rabbitmq:
    host: ${RABBITMQ_HOSTNAME}
    port:
      - ${RABBITMQ_AMQP_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
    template:
      exchange: ${RABBITMQ_EXCHANGE_NAME}
      routing-key:
        upsert_user:
          response: ${RABBITMQ_UPSERT_USER_RESPONSE_ROUTING_KEY}

        delete_favorite_coin:
          response: ${RABBITMQ_DELETE_FAVORITE_COIN_RESPONSE_ROUTING_KEY}

        add_favorite_coin:
          response: ${RABBITMQ_ADD_COIN_RESPONSE_ROUTING_KEY}

        change_language:
          response: ${RABBITMQ_CHANGE_LANGUAGE_RESPONSE_ROUTING_KEY}

        create_notification:
          response: ${RABBITMQ_CREATE_NOTIFICATION_RESPONSE_FROM_DB_ROUTING_KEY}
          notify: ${RABBITMQ_NOTIFY_NOTIFICATION_HAS_BEEN_CREATED_ROUTING_KEY}

        delete_notification:
          response: ${RABBITMQ_DELETE_NOTIFICATION_RESPONSE_ROUTING_KEY}

        update_notification:
          response: ${RABBITMQ_UPDATE_NOTIFICATION_RESPONSE_ROUTING_KEY}

        get_active_notification:
          response: ${RABBITMQ_GET_ACTIVATE_NOTIFICATION_RESPONSE_ROUTING_KEY}

        service_exception: ${RABBITMQ_SERVICE_EXCEPTION_ROUTING_KEY}
    queues:
      upsert_user:
        request: ${RABBITMQ_UPSERT_USER_REQUEST_QUEUE}

      delete_favorite_coin:
        request: ${RABBITMQ_DELETE_FAVORITE_COIN_REQUEST_QUEUE}

      add_favorite_coin:
        request: ${RABBITMQ_ADD_COIN_REQUEST_QUEUE}

      change_language:
        request: ${RABBITMQ_CHANGE_LANGUAGE_REQUEST_QUEUE}

      create_notification:
        request: ${RABBITMQ_CREATE_NOTIFICATION_REQUEST_FOR_DB_QUEUE}

      delete_notification:
        request: ${RABBITMQ_DELETE_NOTIFICATION_REQUEST_QUEUE}

      update_notification:
        request: ${RABBITMQ_UPDATE_NOTIFICATION_REQUEST_QUEUE}

      get_active_notification:
        request: ${RABBITMQ_GET_ACTIVATE_NOTIFICATION_REQUEST_QUEUE}

  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: validate