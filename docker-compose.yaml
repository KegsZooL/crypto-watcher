services:

  dispatcher:
    build:
      context: .
      dockerfile: dispatcher/Dockerfile
    depends_on:
      - rabbitmq
    env_file:
      - .env

  exchange_proxy:
    build:
      context: .
      dockerfile: exchange_proxy/Dockerfile
    depends_on:
      - rabbitmq
    env_file:
      - .env

  data_manager:
    build:
      context: .
      dockerfile: data-manager/Dockerfile
    depends_on:
      - rabbitmq
      - postgres
    env_file:
      - .env

  postgres:
    image: postgres:17
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - ${DATABASE_PORT}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  rabbitmq:
    image: ${RABBITMQ_IMAGE}
    hostname: ${RABBITMQ_HOSTNAME}
    env_file:
      - .env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - ${RABBITMQ_HTTP_PORT}
      - ${RABBITMQ_AMQP_PORT}
    volumes:
      - ./rabbitmq-data:/var/lib/rabbitmq/mnesia